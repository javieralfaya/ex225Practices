<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ex225</groupId>
    <artifactId>ex225</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>EX225 Javier Alfaya</name>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->

        <version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

        <!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
        <version.jboss.bom.eap>6.2.0.GA</version.jboss.bom.eap>
        <version.jboss.bom.wfk>2.5.0-redhat-1</version.jboss.bom.wfk>
        <!-- other plugin versions -->
        <version.surefire.plugin>2.17</version.surefire.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.source>1.7</maven.compiler.source>
        
    </properties>
    
    <!-- CATO: Added for Selenium drivers... -->
    <repositories>
        <repository>
            <id>openqa-releases</id>
            <name>OpenQA Releases</name>
            <url>http://nexus.openqa.org/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- JBoss distributes a complete set of Java EE 6 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack
                (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras
                tools for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate
                stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras
                from the Hibernate family of projects) -->
            <dependency>
                <groupId>org.jboss.bom.wfk</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${version.jboss.bom.wfk}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.bom.eap</groupId>
                <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
                <version>${version.jboss.bom.eap}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Similarly to the JBoss Java EE 6 BOM above, the RichFaces BOM specifies the
                versions of artifacts required for using RichFaces in your project. -->
            <dependency>
                <groupId>org.jboss.bom.wfk</groupId>
                <artifactId>jboss-javaee-6.0-with-richfaces</artifactId>
                <version>${version.jboss.bom.wfk}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            </dependency>
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            	<optional>false</optional>
            </dependency>
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            	<optional>false</optional>
            </dependency>
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            	<optional>false</optional>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.1.5.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
	<groupId>org.jboss.shrinkwrap.descriptors</groupId>
	<artifactId>shrinkwrap-descriptors-api-javaee</artifactId>
	<version>2.0.0-alpha-4</version>
</dependency>
            <!-- <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-bom</artifactId>
                <version>1.3.1.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.selenium</groupId>
                <artifactId>selenium-bom</artifactId>
                <version>2.43.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency> -->
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            	<optional>false</optional>
            </dependency>
            
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            	<optional>false</optional>
            </dependency>
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            </dependency>
            <dependency>
            	<groupId>org.jboss.bom</groupId>
            	<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            	<version>1.0.1.Final</version>
            	<type>pom</type>
            	<scope>import</scope>
            	<optional>false</optional>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- First declare the APIs we depend on and need for compilation.
            All of them are provided by JBoss EAP -->

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided
            scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss EAP -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Servlet API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the RichFaces core library -->
        <dependency>
            <groupId>org.richfaces.core</groupId>
            <artifactId>richfaces-core-impl</artifactId>
        </dependency>
        <!-- Import the RichFaces components -->
        <dependency>
            <groupId>org.richfaces.ui</groupId>
            <artifactId>richfaces-components-ui</artifactId>
        </dependency>

        <!-- Import the Atmosphere framework for a4j:push -->
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Now we declare any tools needed -->

        <!-- Annotation processor to generate the JPA 2.0 metamodel classes
            for typesafe criteria queries -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Annotation processor that raising compilation errors whenever
            constraint annotations are incorrectly used. -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Needed for running tests (you may also use TestNG) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and
            Transactional(JTA) JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        </dependency>
        <dependency>
        	<groupId>mysql</groupId>
        	<artifactId>mysql-connector-java</artifactId>
        	<version>5.1.30</version>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        	<optional>false</optional>
        </dependency>
        
        <!-- CATO: Added for remoting. -->
        <dependency>
        	<groupId>org.jboss.remoting3</groupId>
        	<artifactId>jboss-remoting</artifactId>
        	<version>3.2.12.GA</version>
        	<scope>runtime</scope>
        </dependency>

        <dependency>
        	<groupId>javax.jms</groupId>
        	<artifactId>jms</artifactId>
        	<version>1.1</version>
        	<scope>provided</scope>
        </dependency>
        
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        	<optional>false</optional>
        </dependency>
        
        <!-- CATO: Added for Drone (here using Selenium) -->
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-webdriver-depchain</artifactId>
            <type>pom</type>
            <scope>runtime</scope>
        </dependency>
        
        <!-- CATO: Added in an attempt to avoid NoClassDefFoundError on SafariDriver... :/ -->
        <dependency>
            <groupId>org.openqa.selenium.webdriver</groupId>
            <artifactId>webdriver-safari</artifactId>
            <version>0.6.1039</version>
            <type>pom</type>
            <scope>runtime</scope>
        </dependency>
        
        <!-- CATO: Added in an attempt to avoid NoClassDefFoundError on ElementTraversal... :/ -->
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
            <type>pom</type>
            <scope>runtime</scope>
        </dependency>


        
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-core</artifactId>
        	<scope>provided</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>xml-apis</artifactId>
        			<groupId>xml-apis</groupId>
        		</exclusion>
        	</exclusions>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-entitymanager</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-validator</artifactId>
        	<scope>provided</scope>
        	<optional>false</optional>
        </dependency>
        <dependency>
        	<groupId>org.hibernate</groupId>
        	<artifactId>hibernate-search</artifactId>
        	<optional>false</optional>
        </dependency>
    </dependencies>

    <build>
        <!-- Maven will append the version to the finalName (which is the
            name given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to
                        catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- The JBoss AS plugin deploys your war to a local JBoss AS
                container -->
            <!-- To use, run: mvn package jboss-as:deploy -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
            </plugin>
        </plugins>
    </build>


<profiles>
 <profile>
            <!-- An optional Arquillian testing profile that executes tests 
                in your JBoss AS instance -->
            <!-- This profile will start a new JBoss AS instance, and execute 
                the test, shutting it down when done -->
            <!-- Run with: mvn clean test -Parq-jbossas-managed -->
            <id>arq-jbossas-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-managed</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests 
                in a remote JBoss AS instance -->
            <!-- Run with: mvn clean test -Parq-jbossas-remote -->
            <id>arq-jbossas-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-remote</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- Activate JBoss Product Maven repository -->
        <profile>
            <id>jboss-product-repository</id>
            <activation>
                <property>
                    <name>!jboss-product-repository</name>
                </property>
            </activation>
            <repositories>
                <repository>
                    <id>jboss-products-ga-repo</id>
                    <url>http://maven.repository.redhat.com/techpreview/all/</url>
                </repository>
            </repositories>
        </profile>

    </profiles>
</project>
